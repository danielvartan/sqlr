matrix(1, 2, 3)
dim(matrix(1, 2, 3))
is.atomic(matrix(1, 2, 3))
is.vector(matrix(1, 2, 3))
?is.vector()
cutter(seq(10), c(3, 9))
cutter(seq(10), c(3, 9), include_index = TRUE, cut_location = "left")
cutter(seq(10), c(3, 9), rm_start = TRUE)
cutter(seq(10), c(3, 9), rm_end = TRUE)
args(checkmate::assert_choice)
cutter(seq(20), c(7, 16), rm_start = TRUE, rm_end = TRUE)
stringr::str_extract(c(1, 2), "2")
stringr::str_split_fixed(fruit, " ", n = 2)
fruits
library(stringr)
fruit
stringr::str_split_fixed(fruit, " ", n = 2)
see("\\w")
?str_split
?checkmate::assert_vector
checkmate::assert_vector(1, strict = TRUE, min.len = 1)
checkmate::assert_vector(matrix(1, 2, 3), strict = TRUE, min.len = 1)
checkmate::assert_vector("a", strict = TRUE, min.len = 1)
checkmate::assert_vector(hms::parse_hm("10:00"), strict = TRUE, min.len = 1)
cutter(seq(10), c(3, 9), between = "left")
devtools::load_all(".")
cutter(seq(10), c(3, 9), between = "left")
devtools::load_all(".")
cutter(seq(10), c(3, 9), between = "left")
devtools::load_all(".")
cutter(seq(10), c(3, 9), between = "left")
devtools::load_all(".")
cutter(seq(10), c(3, 9), between = "left")
seq(10)
length(index) == 1
!length(index) == 1
i == 1
i <- 2
i == 1
!i == 1
devtools::load_all(".")
cutter(seq(10), c(3, 9), between = "left")
cutter(seq(10), c(3, 9), between = "right")
cutter(seq(10), c(3, 10), between = "right")
cutter(seq(10), c(3, 10), between = "left")
cutter(seq(10), c(3, 9))
cutter(seq(10), c(3, 9))
cutter(seq(10), c(3, 9), between = "left")
cutter(seq(10), c(3, 9), between = "right")
cutter(seq(10), c(3, 10), between = "right", rm_end = TRUE)
cutter(seq(10), c(10), between = "right", rm_end = TRUE)
devtools::load_all(".")
cutter(seq(10), c(10), between = "right", rm_end = TRUE)
devtools::load_all(".")
cutter(seq(10), c(3, 9))
cutter(seq(10), c(3, 9), between = "left")
cutter(seq(10), c(3, 9), between = "right")
cutter(seq(20), c(7, 16), rm_start = TRUE, rm_end = TRUE)
cutter(seq(10), c(3, 9))
cutter(seq(10), c(3, 9), between = "left")
cutter(seq(10), c(3, 9), between = "right")
cutter(seq(10), c(3, 9), rm_start = TRUE)
cutter(seq(10), c(3, 9), rm_end = TRUE)
stringr::str_sub(c("dadede", "ddedaede"), 1, 1)
?split
stringi::stri_reverse(c('123', 'abc d e f'))
stri_escape_unicode('a\u0105!')
library(stringi)
stri_escape_unicode('a\u0105!')
stri_isempty(letters[1:3])
stri_isempty(character(0))
stri_isempty("")
stri_enc_toascii("Ã¡dsd")
stri_enc_toascii("adsd")
rm_start <- ifelse(index[1] == 1, FALSE, TRUE)
index <- 1
rm_start <- ifelse(index[1] == 1, FALSE, TRUE)
file <- "2021-04-27 - Citations - PubMed - 1-2869.nbib"
file <- raw_data("citation", file)
devtools::load_all(".")
if (count_ris(file) == 0) {
stop("No citation/reference was identified in the 'file' argument.",
call. = FALSE)
}
out <- chopper_ris(file)
devtools::load_all(".")
out <- chopper_ris(file)
out[[1]]
out[[2]]
file <- "2021-04-27 - Citations - Embase - EN - 1-4814.ris"
out[[length(out)]]
out <- chopper_ris(file)
file <- raw_data("citation", file)
out <- chopper_ris(file)
out[[1]]
out[[2]]
out[[2]]
out[[length(out)]]
file <- "2021-04-27 - Citations - PubMed - 1-2869.nbib"
file <- raw_data("citation", file)
out <- chopper_ris(file)
out[[1]]
count_ris()
count_ris()
count_ris()
citation_files <- raw_data("citation", quiet = TRUE)
pubmed_files <- stringr::str_subset(citation_files, "pubmed")
ebscohost_files <- stringr::str_subset(citation_files, "ebscohost")
embase_files <- stringr::str_subset(citation_files, "embase")
lilacs_es_files <- stringr::str_subset(citation_files, "lilacs_es")
lilacs_pt_files <- stringr::str_subset(citation_files, "lilacs_pt")
psycnet_files <- stringr::str_subset(citation_files, "psycnet") # failed
scielo_es_files <- stringr::str_subset(citation_files, "scielo_es")
scielo_pt_files <- stringr::str_subset(citation_files, "scielo_pt")
scopus_files <- stringr::str_subset(citation_files, "scopus")
wos_files <- stringr::str_subset(citation_files, "web-of-science")
db <- "pubmed"
path <- "./inst/extdata/citation/"
choices <- c("wos", "pubmed", "scopus", "ovid", "asp", "synthesir")
tag_namming <- "none"
# tag_namming <- if (db %in% choices) db else "best_guess"
files <- paste0(path, get(paste0(db, "_files")))
assign(db, synthesisr::read_refs(files, tag_namming))
assign(db, clear_row_names(get(db)))
assign(db, dplyr::slice_head(get(db), n = 10))
file <- "2021-04-27 - Citations - Embase - EN - 1-4814.ris"
file <- raw_data("citation", file)
data <- synthesisr::read_ref(file)
View(data)
file <- "2021-04-27 - Citations - PubMed - 1-2869.nbib"
out <- chopper_ris(file)
file <- raw_data("citation", file)
out <- chopper_ris(file)
out[[1]]
rm_na(out[[1]])
grep("^\s*$", c("", "teste - teste"))
grep("^\\s*$", c("", "teste - teste"))
x <- c("", "teste - teste")
x[-grep("^\\s*$", c("", "teste - teste"))]
out <- chopper_ris(file)
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
out <- chopper_ris(file)
out[[1]]
out[[1]][-(is.na(x) || grep("^\\s*$"))]
x <- out[[1]]
x[-(is.na(x) || grep("^\\s*$", x))]
x[-(is.na(x) || grep("^\\s*$", x))]
grep("^\\s*$", x))
grep("^\\s*$", x)
x
grep("^\\s*$", x)
is.na(x) || grep("^\\s*$", x)
devtools::load_all(".")
x[-grep("^\\s*$", x)]
grep("^\\s*$", c("   ", " "))
grep("^\\s*$", c("   ", " ", " d dsdas"))
grep("^\\s*$", c("   ", " ", " d dsdas", ""))
out <- chopper_ris(file)
out[[1]]
out[[length(out)]]
length(out)
which(out == character(0))
?lengths
lengths(out)
x <- out[!lengths(out) == 0]
out[[length(out)]]
length(out)
tail(lengths(out))
x[[length(x)]]
count_ris(file)
vapply(c("PMID", "PMID", "PMID"), stringr::str_detect, logical(1),
pattern = "^PMID$|^PMID |^PMID-")
vapply(c("PMID", "teste", "PMID", "teste", "PMID", "teste"), stringr::str_detect, logical(1),
pattern = "^PMID$|^PMID |^PMID-")
index <- vapply(c("PMID", "teste", "PMID", "teste", "PMID", "teste"), stringr::str_detect, logical(1),
pattern = "^PMID$|^PMID |^PMID-")
x <- c("PMID", "teste", "PMID", "teste", "PMID", "teste")
cutter(x, which(index == TRUE), between = "left")
cutter(x, which(index == TRUE), between = "left", rm_start = FALSE)
cutter(x, which(index == TRUE), between = "left", rm_start = TRUE)
args(ifelase)
args(ifelse)
ifelse(index[1] == 1, FALSE, TRUE)
index <- which(index == TRUE)
index
ifelse(index[1] == 1, FALSE, TRUE)
clear_names(ifelse(index[1] == 1, FALSE, TRUE))
clear_names(ifelse(index[1] == 1, FALSE, TRUE))
devtools::load_all(".")
out <- chopper_ris(file)
length(out)
data <- readLines(file[1], warn = FALSE)
index_1 <- vapply(data, stringr::str_detect, logical(1),
pattern = "^PMID$|^PMID |^PMID-")
index_2 <- vapply(data, stringr::str_detect, logical(1),
pattern = "^ER$|^ER |^ER-")
if (length(which(index_1 == TRUE)) >= length(which(index_2 == TRUE))) {
index <- which(index_1 == TRUE)
between <- "left"
} else {
index <- which(index_2 == TRUE)
between <- "right"
}
rm_start <- clear_names(ifelse(index[1] == 1, FALSE, TRUE))
index[length(index)]
out <- cutter(data, which(index == TRUE), between = between,
rm_start = rm_start)
out <- cutter(data, index, between = between, rm_start = rm_start)
out[length(out)]
out <- lapply(out, function(x) x[-grep("^\\s*$", x)])
out[length(out)]
out <- cutter(data, index, between = between, rm_start = rm_start)
out[length(out)]
out <- grep("^\\s*$", out[[length(out)]])]
out <- grep("^\\s*$", out[[length(out)]])
out
data <- readLines(file[1], warn = FALSE)
index_1 <- vapply(data, stringr::str_detect, logical(1),
pattern = "^PMID$|^PMID |^PMID-")
index_2 <- vapply(data, stringr::str_detect, logical(1),
pattern = "^ER$|^ER |^ER-")
if (length(which(index_1 == TRUE)) >= length(which(index_2 == TRUE))) {
index <- which(index_1 == TRUE)
between <- "left"
} else {
index <- which(index_2 == TRUE)
between <- "right"
}
rm_start <- clear_names(ifelse(index[1] == 1, FALSE, TRUE))
out <- cutter(data, index, between = between, rm_start = rm_start)
grep("^\\s*$", out[[length(out)]])
which(grep("^\\s*$", out[[length(out)]]))
?grep
x <- out[[length(out)]]
x
grep("^\\s*$", x)
grep("^\\s*$", x, perl = TRUE)
is.null(grep("^\\s*$", x, perl = TRUE))
length(grep("^\\s*$", x, perl = TRUE))
str_detect(x, "^\\s*$")
x[-str_detect(x, "^\\s*$")]
?str_detect
x[str_detect(x, "^\\s*$")]
x[!str_detect(x, "^\\s*$")]
out <- lapply(out, function(x) x[!str_detect(x, "^\\s*$")])
out[[length(out)]]
out[[1]]
out <- out[!lengths(out) == 0]
which(lengths(out) == 0)
?cutter
?cutter
x <- out[[1]]
stringr::str_detect(x, "[A-Z0-9]*")
stringr::str_detect(x, "[A-Z0-9]+ ")
stringr::str_detect(x, "[A-Z0-9]+?- ")
stringr::str_detect(x, "[A-Z0-9]+?[-] ")
stringr::str_detect(x, "[A-Z0-9]+?- ")
stringr::str_detect(x, "[A-Z0-9]+(-)? ")
stringr::str_extract(x, "[A-Z0-9]+(-)? ")
stringr::str_extract(x, "[A-Z0-9]+(?=-| ")
stringr::str_extract(x, "[A-Z0-9]+(?=(-| ))")
is.na(stringr::str_extract(x, "[A-Z0-9]+(?=(-| ))"))
stringr::str_extract(triws(x), "[A-Z0-9]+(?=(-| ))")
stringr::str_extract(trimws(x), "[A-Z0-9]+(?=(-| ))")
stringr::str_extract(trimws(x), "^[A-Z0-9]+(?=(-| ))")
stringr::str_extract(x, "^[A-Z0-9]+(?=(-| ))")
stringr::str_extract(trimws(x), "[A-Z0-9]+(?=(-\\s+| ))")
stringr::str_extract(x, "^[A-Z0-9]+(?=(-\\s+|\\s+-\\s+))")
file <- "2021-04-28 - Citations - APA - EN - 1-500.ris"
file <- raw_data("citation", file)
data <- readLines(file[1], warn = FALSE)
index_1 <- vapply(data, stringr::str_detect, logical(1),
pattern = "^PMID$|^PMID |^PMID-")
index_2 <- vapply(data, stringr::str_detect, logical(1),
pattern = "^ER$|^ER |^ER-")
if (length(which(index_1 == TRUE)) >= length(which(index_2 == TRUE))) {
index <- which(index_1 == TRUE)
between <- "left"
} else {
index <- which(index_2 == TRUE)
between <- "right"
}
rm_start <- clear_names(ifelse(index[1] == 1, FALSE, TRUE))
out <- cutter(data, index, between = between, rm_start = rm_start)
out[[1]]
devtools::load_all(".")
data <- readLines(file[1], warn = FALSE)
index_1 <- vapply(data, stringr::str_detect, logical(1),
pattern = "^PMID$|^PMID |^PMID-")
index_2 <- vapply(data, stringr::str_detect, logical(1),
pattern = "^ER$|^ER |^ER-")
if (length(which(index_1 == TRUE)) >= length(which(index_2 == TRUE))) {
index <- which(index_1 == TRUE)
between <- "left"
} else {
index <- which(index_2 == TRUE)
between <- "right"
}
out <- cutter(data, index, between = between)
out[[1]]
cutter(out[[1]], 3, "right"
)
cutter(out[[1]], 4, "right"
)
cutter(out[[1]], 4, "right")
cutter(seq(10), c(3, 9), between = "right")
cutter(out[[1]], 4, between = "right")
length(out[[1]])
devtools::load_all(".")
cutter(out[[1]], 4, between = "right")
stringr::str_extract(x, "^[A-Z][A-Z0-9]+(?=(-\\s+|\\s+-\\s+))")
trimws(stringr::str_extract(x, pattern_data))
pattern_tag <- "^[A-Z][A-Z0-9]+(?=(-\\s+|\\s+-\\s+))"
pattern_data <- "^(?<=[A-Z][A-Z0-9]+(-\\s+|\\s+-\\s+)).*"
trimws(stringr::str_extract(x, pattern_data))
pattern_data <- "^(?<=.*-).*"
trimws(stringr::str_extract(x, pattern_data))
pattern_data <- "^[^.*-].*"
trimws(stringr::str_extract(x, pattern_data))
pattern_data <- "(?<=-).*"
trimws(stringr::str_extract(x, pattern_data))
file <- "2021-04-28 - Citations - APA - EN - 1-500.ris"
file <- raw_data("citation", file)
data <- readLines(file[1], warn = FALSE)
index_1 <- vapply(data, stringr::str_detect, logical(1),
pattern = "^PMID$|^PMID |^PMID-")
index_2 <- vapply(data, stringr::str_detect, logical(1),
pattern = "^ER$|^ER |^ER-")
if (length(which(index_1 == TRUE)) >= length(which(index_2 == TRUE))) {
index <- which(index_1 == TRUE)
between <- "left"
} else {
index <- which(index_2 == TRUE)
between <- "right"
}
out <- cutter(data, index, between = between)
out <- lapply(out, function(x) x[!stringr::str_detect(x, "^\\s*$")])
out <- out[!lengths(out) == 0]
y <- out[[1]]
y
stringr::str_detect(y, pattern_tag)
which(stringr::str_detect(y, pattern_tag) == TRUE)
x_bkp <- x
x <- y
cutter(x, first_tag, between = "left")
first_tag <- which(stringr::str_detect(x, pattern_tag) == TRUE)[1]
cutter(x, first_tag, between = "left")
cutter(x, first_tag, between = "left", rm_start = TRUE)
out[[1]]
x <- out
checkmate::assert_list(x, min.len = 1)
first_tag <- which(stringr::str_detect(x, pattern_tag) == TRUE)[1]
if (!first_tag == 1) {
x[[1]] <- cutter(x, first_tag, between = "left", rm_start = TRUE)
}
first_tag <- which(stringr::str_detect(x[[1]], pattern_tag) == TRUE)[1]
if (!first_tag == 1) {
x[[1]] <- cutter(x[[1]], first_tag, between = "left", rm_start = TRUE)
}
x[[1]]
unlist(x[[1]])
unlist(x[[1]])
x <- out
checkmate::assert_list(x, min.len = 1)
first_tag <- which(stringr::str_detect(x[[1]], pattern_tag) == TRUE)[1]
if (!first_tag == 1) {
x[[1]] <- unlist(cutter(x[[1]], first_tag, between = "left",
rm_start = TRUE))
}
x[[1]]
x <- x_bkp
x
pattern_data <- "^(?<=-).*"
trimws(stringr::str_extract(x, pattern_data))
pattern_data <- "(?<=-).*"
trimws(stringr::str_extract(x, pattern_data))
devtools::load_all(".")
file <- "2021-04-28 - Citations - APA - EN - 1-500.ris"
file <- raw_data("citation", file)
data <- readLines(file[1], warn = FALSE)
index_1 <- vapply(data, stringr::str_detect, logical(1),
pattern = "^PMID$|^PMID |^PMID-")
index_2 <- vapply(data, stringr::str_detect, logical(1),
pattern = "^ER$|^ER |^ER-")
if (length(which(index_1 == TRUE)) >= length(which(index_2 == TRUE))) {
index <- which(index_1 == TRUE)
between <- "left"
} else {
index <- which(index_2 == TRUE)
between <- "right"
}
out <- cutter(data, index, between = between)
out <- lapply(out, function(x) x[!stringr::str_detect(x, "^\\s*$")])
out <- out[!lengths(out) == 0]
x <- out[[1]]
x
pattern_tag <- "^[A-Z][A-Z0-9]+(?=(-\\s+|\\s+-\\s+))"
first_tag <- which(stringr::str_detect(x[[1]], pattern_tag) == TRUE)[1]
if (!first_tag == 1) {
x[[1]] <- unlist(cutter(x[[1]], first_tag, between = "left",
rm_start = TRUE))
}
x
stringr::str_detect(x[[1]], pattern_tag
)
bkp <- out
x <- out
pattern_tag <- "^[A-Z][A-Z0-9]+(?=(-\\s+|\\s+-\\s+))"
first_tag <- which(stringr::str_detect(x[[1]], pattern_tag) == TRUE)[1]
if (!first_tag == 1) {
x[[1]] <- unlist(cutter(x[[1]], first_tag, between = "left",
rm_start = TRUE))
}
out[[1]]
out[[1]]
x[[1]]
out[[1]]
x[[1]]
dim(file)
checkmate::assert_atomic_vector(list(a = 1))
devtools::load_all(".")
mctq::micro_mctq$se_w
cutter(mctq::micro_mctq$se_w, c(6, 10))
args(checkmate::assert_atomic_vector)
devtools::load_all(".")
cutter(mctq::micro_mctq$se_w, c(6, 10))
file <- "2021-04-27 - Citations - PubMed - 1-2869.nbib"
file <- raw_data("citation", file)
data <- readLines(file[1], warn = FALSE)
index_1 <- vapply(data, stringr::str_detect, logical(1),
pattern = "^PMID$|^PMID |^PMID-")
index_2 <- vapply(data, stringr::str_detect, logical(1),
pattern = "^ER$|^ER |^ER-")
if (length(which(index_1 == TRUE)) >= length(which(index_2 == TRUE))) {
index <- which(index_1 == TRUE)
between <- "left"
} else {
index <- which(index_2 == TRUE)
between <- "right"
}
out <- cutter(data, index, between = between)
out <- lapply(out, function(x) x[!stringr::str_detect(x, "^\\s*$")])
out <- out[!lengths(out) == 0]
pattern_tag <- "^[A-Z][A-Z0-9]+(?=(-\\s+|\\s+-\\s+))"
first_tag <- which(stringr::str_detect(x[[1]], pattern_tag) == TRUE)[1]
if (!first_tag == 1) {
x[[1]] <- unlist(cutter(x[[1]], first_tag, between = "left",
rm_start = TRUE))
}
x <- out[[1]]
x
stringr::str_extract(x, pattern_tag)
stringr::str_sub(x, 2, 3)
stringr::str_detect(x, pattern_tag)
!tag_detect
tag_detect <- stringr::str_detect(x, pattern_tag)
!tag_detect
(any(!tag_detect))
any(FALSE)
any(FALSE, TRUE)
whish(tag_detect == FALSE)
which(tag_detect == FALSE)
tagged_lines <- which(tag_detect == TRUE)
missing_tags <- which(tag_detect == FALSE)
tagged_lines
trimws(x[8, 9])
trimws(x[c(8, 9)])
paste(trimws(x[c(8, 9)]), collapse = TRUE)
paste(trimws(x[c(8, 9)]), collapse = TRYE)
paste(trimws(x[c(8, 9)]), collapse = TRUE)
?paste(trimws(x[c(8, 9)]), collapse = TRUE)
?paste(trimws(x[c(8, 9)]), collapse = " ")
paste(trimws(x[c(8, 9)]), collapse = " ")
tagged_lines
tagged_lines - seq_along(x)
tagged_lines - seq_along(x)[length(tagged_lines)]
seq_along(x)
tagged_lines
seq_along(x)[length(tagged_lines)] - tagged_lines
diff(tagged_lines, seq_along(x)[length(tagged_lines)])
Reduce("-", tagged_lines)
C(1, 2) - c(3, 4)
c(1, 2) - c(3, 4)
c(1, 2) - c(1, 2)
seq_along(x)[length(tagged_lines)]
tagged_lines - seq_along(x)[seq_len(length(tagged_lines))]
tagged_lines
seq_along(x)[seq_len(length(tagged_lines))]
?diff
diff(1:10, 2)
diff(tagged_lines)
12+27
which(!diff(tagged_lines) == 1)
seq(2, 4)
foo <- function (x) {
tag_detect <- stringr::str_detect(x, pattern_tag)
if (any(!tag_detect)) {
tagged_lines <- which(tag_detect == TRUE)
missing_tags <- which(tag_detect == FALSE)
diff <- diff(tagged_lines)
out <- character()
for (i in which(!diff(tagged_lines) == 1)) {
out <- append(out, x[seq(length(out) + 1, i - 1)])
out <- append(out, paste(trimws(x[c(8, 9)]), collapse = " "))
}
}
out
}
foo(x)
x
