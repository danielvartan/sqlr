if (isTRUE(update)) {
data <- read_sheet("keyword")
} else {
data <- keyword
}
bkp <- data
data <- data %>%
dplyr::filter(approved == TRUE) %>%
dplyr::mutate(
keyword = dplyr::case_when(
!is.na(keyword) & !is.na(variation) ~
paste0(keyword, ",", variation),
!is.na(keyword) & is.na(variation) ~
keyword
)
) %>%
dplyr::select(domain_id, language, keyword)
data
keyword$language
unique(keyword$language)
sql.pregnancy::test()
domain_id <- 1
?stringr::str_extract()
domains <- as.numeric(unique(keyword$domain_id))
languages <- tolower(unique(keyword$language))
x <- unique(keyword$language)
x
stringr::str_detect()
?stringr::str_detect()
?match
language <- "english"
unique(keyword$language)[language %in% unique(keyword$language)]
unique(keyword$language)[language %in% languages]
language %in% languages
languages %in% language
unique(keyword$language)[languages %in% language]
data <- test %>%
dplyr::filter(domain_id == domain_id, language == language)
data <- data %>%
dplyr::filter(domain_id == domain_id, language == language)
data
unique(data$language)
View(data)
data <- data %>%
dplyr::filter(domain_id == domain_id, language == language)
data <- data %>%
dplyr::filter(domain_id == get(domain_id), language == get(language))
get(domain_id)
domain_id
dplyr::filter(domain_id == domain_id, language == language)
data <- data %>%
dplyr::filter(domain_id == domain_id, language == language)
data <- data %>%
dplyr::filter(domain_id == get("domain_id"), language == get("language"))
data
get("domain_id")
View(data)
bkp <- data
data <- data %>%
dplyr::filter(domain_id == 1)
data <- bkp
domain <- domain_id
lang <- unique(data$language)[languages %in% language]
data <- data %>%
dplyr::filter(domain_id == domain, language = lang)
data <- data %>%
dplyr::filter(domain_id == domain, language == lang)
View(data)
?dplyr::filter
keywords <- tidy_keyword(data$keyword)
keywords
devtools::load_all(".")
keyword_set(2, "english")
devtools::load_all(".")
keyword_set(2, "english")
devtools::load_all(".")
keyword_set(2, "english")
keyword_set(2, "spanish")
keyword_set(2, "portuguese")
sheet_id()
read_sheet(sheet_id()[1])
print(read_sheet(sheet_id()[1]))
devtools::load_all(".")
print(read_sheet())
devtools::load_all(".")
devtools::load_all(".")
keyword_set(1)
args(checkmate::assert_choice)
devtools::load_all(".")
keyword_set(1)
tolower(NULL)
devtools::load_all(".")
keyword_set(1)
use_r("format_keyword")
pattern <- paste0("[0-9]|([0-9] OR|AND|NOT [0-9])|",
"([0-9] OR|AND|NOT [0-9] OR|AND|NOT [0-9])")
x <- "1 AND 2"
grepl(pattern, x)
grepl(pattern, "assa")
grepl(pattern, "1")
grepl(pattern, "1 ")
pattern <- paste0("^[0-9]$|^([0-9] OR|AND|NOT [0-9])$|",
"^([0-9] OR|AND|NOT [0-9] OR|AND|NOT [0-9])$")
grepl(pattern, "1 ")
grepl(pattern, "1 AND")
grepl(pattern, "1 AND 2")
pattern <- paste0("^[0-9]+$|^([0-9]+ OR|AND|NOT [0-9]+)$|",
"^([0-9]+ OR|AND|NOT [0-9] OR|AND|NOT [0-9]+)$")
grepl(pattern, "1 AND 2")
stringr::str_view("1", pattern)
stringr::str_view("1 AND 2", pattern)
pattern <- paste0("^[0-9]+$|^([0-9]+ (OR|AND|NOT) [0-9]+)$|",
"^([0-9]+ OR|AND|NOT [0-9] OR|AND|NOT [0-9]+)$")
stringr::str_view("1 AND 2", pattern)
grepl(pattern, "1 AND 2")
grepl(pattern, "1 AND 2 ")
grepl(pattern, "1 AND 2 OR 2")
pattern <- paste0("^[0-9]+$|^[0-9]+ (OR|AND|NOT) [0-9]+$|",
"^[0-9]+ (OR|AND|NOT) [0-9] (OR|AND|NOT) [0-9]+$")
grepl(pattern, "1 AND 2 OR 2")
grepl(pattern, "1 AND 2 OR ")
grepl(pattern, "1 AND 2 OR 2")
stringr::str_c("[0-9]+", "(OR|AND|NOT)", sep = " ")
stringr::str_c(rep("[0-9]+", 2), rep("(OR|AND|NOT)", 2), sep = " ")
split?
?split
glue::glue_collapse(rep("[0-9]+", 2), rep("(OR|AND|NOT)", 2), sep = " ")
args(glue::glue_collapse)
paste0(rep("[0-9]+", 2), rep("(OR|AND|NOT)", 2), sep = " ")
args(paste)
paste(rep("[0-9]+", 2), rep("(OR|AND|NOT)", 2), sep = " ")
paste(rep("[0-9]+", 2), rep("(OR|AND|NOT)", 2), sep = " ", collapse = " ")
seq(10)
?seq_len()
seq(2, 10)
pattern_1 <- "^[0-9]+$"
pattern_2 <- "^[0-9]+ (OR|AND|NOT) [0-9]+$"
rep <- 10
pattern <- character(0)
i <- 2
paste(rep("[0-9]+", i), rep("(OR|AND|NOT)", i), sep = " ",
collapse = " ")
paste(rep("[0-9]+", i), rep("(OR|AND|NOT)", i - 1), sep = " ",
collapse = " ")
j <- paste(rep("[0-9]+", i), rep("(OR|AND|NOT)", i), sep = " ",
collapse = " ")
j <- sub(" (OR|AND|NOT)$", "")
?sub
j <- paste(rep("[0-9]+", i), rep("(OR|AND|NOT)", i), sep = " ",
collapse = " ")
j <- sub(" (OR|AND|NOT)$", "", j)
j
j <- paste(rep("[0-9]+", i), rep("(OR|AND|NOT)", i), sep = " ",
collapse = " ")
j
sub(" (OR|AND|NOT)$", "", j, perl = TRUE)
substr(j, -1, -10)
?substr
substr("abcdef", 2, 4)
substr(j, -1, -5)
substring(j, -1, -5)
substring(j, -1, 5)
sub(" (OR|AND|NOT)$", "", j, fixed = TRUE)
sub(" (OR|AND|NOT)", "", j, fixed = TRUE)
gsub(" \(OR\|AND\|NOT\)$", "", j, perl = TRUE)
gsub(" \\(OR\\|AND\\|NOT\\)$", "", j, perl = TRUE)
rep <- 10
pattern <- "^[0-9]+$"
for (i in seq(2, rep)) {
j <- paste(rep("[0-9]+", i), rep("(OR|AND|NOT)", i), sep = " ",
collapse = " ")
j <- gsub(" \\(OR\\|AND\\|NOT\\)$", "", j, perl = TRUE)
pattern <- paste0(pattern, "|^", j, "$")
}
pattern
check <- grepl(pattern, x)
grepl(pattern, "1 AND 2")
grepl(pattern, "1 AND 2 ")
grepl(pattern, "1 AND 2 3")
grepl(pattern, "1 AND 23")
grepl("[0-9]+", "1 AND 23")
grep("[0-9]+", "1 AND 23")
stringr::str_extract_all("1 AND 23", "[0-9]+")
grepl(pattern, "1 AND 2 OR 3 NOT 25")
grepl(pattern, "1 AND 2 OR 3 NOT 25 ")
devtools::load_all(".")
check_set("1 AND 2")
check_set("1 AND 2 ")
check_set("1 AND 2 NOT")
check_set("1 AND 2 NOT 1")
check_set("1 AND 2 NOT 1 1")
devtools::load_all(".")
check_set("1 AND 2 NOT 1 1")
devtools::load_all(".")
check_set("1 AND 2 NOT 1 1")
devtools::load_all(".")
check_set("1 AND 2 NOT 1 1")
check_set("1 AND 2 NOT 1 ")
check_set("dsadsa")
?grepl
rep <- 10
pattern <- "^[0-9]+$"
for (i in seq(2, rep)) {
j <- paste(rep("[0-9]+", i), rep("(AND|OR|NOT)", i), sep = " ",
collapse = " ")
j <- gsub(" \\(OR\\|AND\\|NOT\\)$", "", j, perl = TRUE)
pattern <- paste0(pattern, "|^", j, "$")
}
pattern
grepl(pattern, stringr::str_squish(x))
grepl(pattern, "1")
grepl(pattern, "1 AND 2")
rep <- 10
pattern <- "^[0-9]+$"
for (i in seq(2, rep)) {
j <- paste(rep("[0-9]+", i), rep("(AND|OR|NOT)", i), sep = " ",
collapse = " ")
j <- gsub(" \\(OR\\|AND\\|NOT\\)$", "", j, perl = TRUE)
pattern <- paste0(pattern, "|^", j, "$")
}
j
i <- 2
j <- paste(rep("[0-9]+", i), rep("(AND|OR|NOT)", i), sep = " ",
collapse = " ")
j <- gsub(" \\(OR\\|AND\\|NOT\\)$", "", j, perl = TRUE)
j
gsub(" \\(OR\\|AND\\|NOT\\)$", "", j, perl = TRUE)
j <- paste(rep("[0-9]+", i), rep("(AND|OR|NOT)", i), sep = " ",
collapse = " ")
j
gsub(" \\(OR\\|AND\\|NOT\\)$", "", j, perl = TRUE)
gsub(" \(OR\|AND\|NOT\)$", "", j, perl = TRUE)
j <- paste(rep("[0-9]+", i), rep("(AND|OR|NOT)", i), collapse = " ")
j <- gsub(" \\(OR\\|AND\\|NOT\\)$", "", j, perl = TRUE)
pattern <- paste0(pattern, "|^", j, "$")
j
paste(rep("[0-9]+", i), rep("(AND|OR|NOT)", i), collapse = " ")
pattern
pattern <- "^[0-9]+$"
j <- paste(rep("[0-9]+", i), rep("(AND|OR|NOT)", i), collapse = " ")
j <- gsub(" \\(OR\\|AND\\|NOT\\)$", "", j, perl = TRUE)
pattern <- paste0(pattern, "|^", j, "$")
pattern
gsub(" \\(OR\\|AND\\|NOT\\)$", "", j, perl = TRUE)
j
gsub(" \\(OR\\|AND\\|NOT\\)$", "", j, perl = TRUE)
str_extract_(j, " \\(OR\\|AND\\|NOT\\)$")
str_extract_(j, " \(OR\|AND\|NOT\)$")
gsub(" \\(AND\\|OR\\|NOT\\)$", "", j, perl = TRUE)
rep <- 10
pattern <- "^[0-9]+$"
for (i in seq(2, rep)) {
j <- paste(rep("[0-9]+", i), rep("(AND|OR|NOT)", i), collapse = " ")
j <- gsub(" \\(AND\\|OR\\|NOT\\)$", "", j, perl = TRUE)
pattern <- paste0(pattern, "|^", j, "$")
}
pattern
devtools::load_all(".")
check_set("1")
check_set("1 ")
check_set("1 AND 2")
check_set("1 AND 2 dsad")
devtools::load_all(".")
check_set("1 AND 2 dsad")
check_set("1 AND 2")
check_set("1 AND 2 ")
devtools::load_all(".")
check_set("1 AND 2 ")
pattern <- check_set("1 AND 2 ")
grepl(pattern, stringr::str_squish(x))
grepl(pattern, stringr::str_squish("1"))
grepl(pattern, stringr::str_squish("1 "))
grepl(pattern, stringr::str_squish("1 E"))
grepl(pattern, stringr::str_squish("1 AND 2"))
grepl(pattern, stringr::str_squish("1 AND A"))
grepl(pattern, stringr::str_squish("1 AND 23"))
grepl(pattern, stringr::str_squish("1 AND 23 NOT A"))
grepl(pattern, stringr::str_squish("1 AND 23 NOT 5"))
stringr::str_squish(c(1, 2))
stringr::str_extract("1 AND 2", "[0-9]+")
stringr::str_extract_all("1 AND 2", "[0-9]+")
stringr::str_extract_all("1 AND 2", "[A-Z]+")
stringr::str_extract_all("1 AND 2 NOT", "[A-Z]+")
domain_set <- x
contraint_set <- x
keyword_set(1, "english")
paste0(keyword_set(1, "english"), "OR")
paste(keyword_set(1, "english"), collapse = "OR")
paste(keyword_set(1, "english"), collapse = " OR ")
cat(paste(keyword_set(1, "english"), collapse = " OR "))
list()
domain <- list()
append(domain, list(1 = "a"))
append(domain, list("1" = "a"))
checkmate::assert_number(1)
checkmate::assert_number("1")
checkmate::assert_integerish(1)
checkmate::assert_integerish("1")
as.numeric("1")
as.numeric("a")
devtools::load_all(".")
devtools::load_all(".")
provider = "pubmed"
domain_set <- "1 AND 2"
constraint_set <- "1 AND (4 OR 5)"
provider <- tolower(provider)
domain_id <- unlist(stringr::str_extract_all(domain_set, "[0-9]+"))
constraint_id <- unlist(stringr::str_extract_all(domain_set, "[0-9]+"))
language <- constraint %>% filter(id %in% constraint_id)
language <- constraint %>% filter(constraint_id %in% constraint_id)
language
constraint
constraint_id
language <- constraint %>%
filter(constraint_id %in% as.numeric(constraint_id))
language
language <- constraint %>%
filter(constraint_id %in% as.integer(c_id))
provider <- tolower(provider)
d_id <- unlist(stringr::str_extract_all(domain_set, "[0-9]+"))
c_id <- unlist(stringr::str_extract_all(domain_set, "[0-9]+"))
language <- constraint %>%
filter(constraint_id %in% as.integer(c_id))
language
as.integer(c_id)
constraint$constraint_id %in% as.integer(c_id)
language <- constraint %>%
dplyr::filter(constraint_id %in% as.integer(c_id))
language
constraint %>%
dplyr::filter(constraint_id %in% as.integer(c_id),
type = "Intrinsic")
constraint %>%
dplyr::filter(constraint_id %in% as.integer(c_id),
type == "Intrinsic")
constraint %>%
dplyr::filter(constraint_id %in% as.integer(c_id),
class == "Intrinsic")
tibble()
as_tibble()
as_tibble(list())
dplyr::as_tibble(list())
nrows(dplyr::as_tibble(list()))
nrow(dplyr::as_tibble(list()))
provider <- tolower(provider)
d_id <- unlist(stringr::str_extract_all(domain_set, "[0-9]+"))
c_id <- unlist(stringr::str_extract_all(domain_set, "[0-9]+"))
c_id
provider <- tolower(provider)
d_id <- unlist(stringr::str_extract_all(domain_set, "[0-9]+"))
c_id <- unlist(stringr::str_extract_all(constraint_set, "[0-9]+"))
language <- constraint %>%
dplyr::filter(constraint_id %in% as.integer(c_id),
class == "Intrinsic")
language
language <- language$name
language
domain <- list()
for (i in as.integer(domain)) {
domain <- append(domain, list(as.character(i) = paste(
keyword_set(i, language), collapse = " OR ")))
}
list(a = 1)
domain <- list()
for (i in as.integer(domain)) {
domain <- append(domain, list(a = paste(
keyword_set(i, language), collapse = " OR ")))
}
domain
domain <- list()
for (i in as.integer(d_id)) {
domain <- append(domain, list(a = paste(
keyword_set(i, language), collapse = " OR ")))
}
domain <- append(domain, list(a = paste(
keyword_set(i, language), collapse = " OR ")))
keyword_set(i, language)
keyword_set(1, language)
keyword_set(1, language)
debugonce(keyword_set)
keyword_set(1, language)
language
unique(data$language)
languages %in% language
devtools::load_all(".")
keyword_set(i, language)
devtools::load_all(".")
keyword_set(i, language)
domain <- list()
for (i in as.integer(d_id)) {
domain <- append(domain, list(a = paste(
keyword_set(i, language), collapse = " OR ")))
}
domain
domain <- list()
for (i in as.integer(d_id)) {
domain <- append(domain, list(i = paste(
keyword_set(i, language), collapse = " OR ")))
}
domain
domain <- list()
for (i in as.integer(d_id)) {
domain <- append(domain, list(as.character(i) = paste(
keyword_set(i, language), collapse = " OR ")))
}
?list
domain <- list()
for (i in as.integer(d_id)) {
domain <- append(domain, list(i = paste(
keyword_set(i, language), collapse = " OR ")))
names(domain)[length(domain)] <- i
}
domain
domain <- list(class = domain_set)
for (i in as.integer(d_id)) {
domain <- append(domain, list(i = paste(
keyword_set(i, language), collapse = " OR ")))
names(domain)[length(domain)] <- i
}
domain
domain <- list(logic = domain_set)
for (i in as.integer(d_id)) {
domain <- append(domain, list(i = paste(
keyword_set(i, language), collapse = " OR ")))
names(domain)[length(domain)] <- i
}
domain
constraint <- constraint %>%
dplyr::filter(constraint_id %in% as.integer(c_id),
class == "Filter")
constraint
constraint <- constraint$name
args(checkmate::assert_list)
checkmate::assert_list(domain)
constraint <- tolower(constraint)
constraint_tags <- list(
title = "[Title]",
abstract = "[Title/Abstract]"
)
constraint <- c("Title", "Abstract")
keyword <- keyword_set(1, "english")
constraint <- tolower(constraint)
constraint_tags <- list(
title = "[Title]",
abstract = "[Title/Abstract]"
)
if ("abstract" %in% constraint) {
tag <- constraint_tags$abstract
} else {
tag <- constraint_tags$title
}
paste0(keyword, tag)
out <- paste0(keyword, tag)
out <- paste(out, collapse = " OR ")))
out <- paste0(keyword, tag)
out <- paste(out, collapse = " OR ")
out
cat(out)
devtools::load_all(".")
pubmed(keyword, "Abstract")
devtools::load_all(".")
pubmed(keyword, "Abstract")
cat(pubmed(keyword, "Abstract"))
cat(pubmed(keyword))
devtools::load_all(".")
cat(pubmed(keyword))
?tolower
tolower(NULL)
stringr::str_to_lower(NULL)
devtools::load_all(".")
cat(pubmed(keyword))
devtools::load_all(".")
cat(pubmed(keyword))
pubmed("sleep")
devtools::load_all(".")
devtools::load_all(".")
pubmed("sleep")
pubmed("sleep", "abstract")
pubmed(c("sleep", "biological"), "abstract")
sqlr.pregnancy::test
try(sqlr.pregnancy::test)
devtools::load_all(".")
pubmed(domain = "a")
pubmed(domain = list("a"))
pubmed(domain = list("a", "b"))
tidy_keyword("sleep")
tidy_keyword("sleep", "biological clock")
devtools::load_all(".")
tidy_keyword("sleep", "biological clock'")
devtools::load_all(".")
pubmed("sleep")
devtools::load_all(".")
pubmed("sleep")
pubmed(keyword = "sleep")
pubmed(keyword = "sleep")
devtools::load_all(".")
devtools::load_all(".")
pubmed(keyword = "sleep")
length(pubmed(keyword = "sleep"))
devtools::load_all(".")
pubmed(keyword = "sleep")
pubmed()
devtools::load_all(".")
pubmed(keyword = "sleep")
devtools::load_all(".")
pubmed(keyword = "sleep")
pubmed(keyword = "sleep", "biologica clock")
devtools::load_all(".")
pubmed(keyword = "sleep", "biologica clock")
pubmed(keyword = "sleep", "biological clock")
pubmed(keyword = "sleep", "biological clock", "abstract")
pubmed(keyword = "sleep", "biological clock", constraint = "abstract")
