{.strong {cli::col_blue(i_total)}}, " / ",
{.strong {n_total}}, " (",
{.strong {cli::col_blue(paste0(i_percentage), "%")}}, ") ",
"foram marcados com ", i))
cli::col_blue(i_total)
cli::cli_alert({.strong {cli::col_blue(i_total)}})
paste0(
{.strong {cli::col_blue(i_total)}}, " / ",
{.strong {n_total}}, " (",
{.strong {cli::col_blue(paste0(i_percentage), "%")}}, ") ",
"foram marcados com ", i)
cli::cli_alert_info(paste0(
"{.strong {cli::col_blue(i_total)}}", " / ",
"{.strong {n_total}}", " (",
"{.strong {cli::col_blue(paste0(i_percentage), '%')}}", ") ",
"foram marcados com ", i))
cli::cli_alert_info(paste0(
"{.strong {cli::col_red(i_total)}}", " / ",
"{.strong {n_total}}", " (",
"{.strong {cli::col_red(paste0(i_percentage), '%')}}", ") ",
"foram marcados com ",
"{.strong {cli::col_blue(i)}}"))
cli::cli_abort(paste0(
"The {cli::col_red(toupper(type))} trial was not found in the ",
"{cli::col_blue('reference')} table."))
args(checkmate::assert_atomic_vector)
paste0(
i_total_pretty, " / ", n_total_pretty,
" (", i_percentage_pretty, "%) ",
"foram marcados com ", i)
i_total <- length(which(x == i))
i_percentage <- ((i_total / n_total) * 100)
i_total_pretty <- format(i_total, big.mark = big.mark)
n_total_pretty <- format(n_total, big.mark = big.mark)
i_percentage_pretty <- i_percentage %>%
round(digits = 2) %>%
format(big.mark = big_mark, decimal.mark = decimal_mark,
scientific = FALSE, n.small = 2)
big_mark = "."
i_total <- length(which(x == i))
i_percentage <- ((i_total / n_total) * 100)
i_total_pretty <- format(i_total, big.mark = big.mark)
n_total_pretty <- format(n_total, big.mark = big.mark)
i_percentage_pretty <- i_percentage %>%
round(digits = 2) %>%
format(big.mark = big_mark, decimal.mark = decimal_mark,
scientific = FALSE, n.small = 2)
paste0(
i_total_pretty, " / ", n_total_pretty,
" (", i_percentage_pretty, "%) ",
"foram marcados com ", i)
i_total <- length(which(x == i))
i_percentage <- ((i_total / n_total) * 100)
i_total_pretty <- format(i_total, big.mark = big.mark)
n_total_pretty <- format(n_total, big.mark = big.mark)
i_percentage_pretty <- i_percentage %>%
round(digits = 2) %>%
format(big.mark = big_mark, decimal.mark = decimal_mark,
scientific = FALSE, n.small = 2)
i_total <- length(which(x == i))
i_percentage <- ((i_total / n_total) * 100)
i_total_pretty <- format(i_total, big.mark = big_mark)
n_total_pretty <- format(n_total, big.mark = big_mark)
i_percentage_pretty <- i_percentage %>%
round(digits = 2) %>%
format(big.mark = big_mark, decimal.mark = decimal_mark,
scientific = FALSE, n.small = 2)
i_total <- length(which(x == i))
i_percentage <- ((i_total / n_total) * 100)
i_total_pretty <- i_total %>%
format(big.mark = big_mark, decimal.mark = decimal_mark)
n_total_pretty <- n_total %>%
format(big.mark = big_mark, decimal.mark = decimal_mark)
i_percentage_pretty <- i_percentage %>%
round(digits = 2) %>%
format(big.mark = big_mark, decimal.mark = decimal_mark,
scientific = FALSE, n.small = 2)
paste0(
i_total_pretty, " / ", n_total_pretty,
" (", i_percentage_pretty, "%) ",
"foram marcados com ", i)
cli::cli_alert_info(paste0(
"{.strong {cli::col_red(i_total)}}", " / ",
"{.strong {n_total}}", " (",
"{.strong {cli::col_red(paste0(i_percentage), '%')}}", ") ",
"foram marcados com ",
"{.strong {cli::col_blue(i)}}"))
cli::cli_alert_info(paste0(
"{.strong {cli::col_red(i_total)}}", " / ",
"{.strong {n_total}}", " (",
"{.strong {cli::col_red(paste0(i_percentage), '%')}}", ") ",
"foram marcados com ",
"{.strong {cli::col_blue(i)}}", "."))
cli::cli_alert_info(paste0(
"{.strong {cli::col_red(i_total_pretty)}}", " / ",
"{.strong {n_total_pretty}}", " (",
"{.strong {cli::col_red(paste0(i_percentage_pretty), '%')}}",
") ", "foram marcados com ",
"{.strong {cli::col_blue(i)}}", "."))
cli::cli_alert_info(paste0(
"{.strong {cli::col_red(i_total_pretty)}}", " / ",
"{.strong {n_total_pretty}}", " (",
"{.strong {cli::col_red(paste0(i_percentage_pretty), '%')}}",
") ", "referências foram marcadas com ",
"{.strong {cli::col_blue(i)}}", "."))
cli::cli_alert_info(paste0(
"{.strong {cli::col_red(i_total_pretty)}}", " / ",
"{.strong {n_total_pretty}}", " (",
"{.strong {cli::col_red(paste0(i_percentage_pretty), '%')}}",
") ", "referências foram marcadas com o critério ",
"{.strong {cli::col_blue(i)}}", "."))
paste0(
i_total_pretty, " / ", n_total_pretty,
" (", i_percentage_pretty, "%) ",
"referências foram marcadas com o critério ", i)
devtools::load_all(".")
md_stats(x)
backtick_("DUP")
devtools::load_all(".")
devtools::load_all(".")
single_underline_("test")
double_underline_("test")
paste0(
double_underline(i_total_pretty), " / ",
n_total_pretty,
" (", double_underline(i_percentage_pretty), "%) ",
"referências foram marcadas com o critério ",
backtick_(i))
paste0(
double_underline_(i_total_pretty), " / ",
n_total_pretty,
" (", double_underline_(i_percentage_pretty), "%) ",
"referências foram marcadas com o critério ",
backtick_(i))
paste0(
double_underline_(i_total_pretty), " / ",
n_total_pretty,
" (__", i_percentage_pretty, "%__) ",
"referências foram marcadas com o critério ",
backtick_(i))
devtools::load_all(".")
md_stats(x)
cli::cli::cat_line()
cli::cat_line()
?cli::style_underline()
cli::style_underline("test")
cli::cli_h1("test")
cli::cli_inform("test")
cli::cli_alert_info("test")
between_text = "references were marked as"
devtools::load_all(".")
stats_builder(x, "referências foram marcadas com o critério")
stats_builder(x, "referências")
devtools::load_all(".")
stats_builder(x, "referências")
devtools::load_all(".")
stats_builder(x, "referências")
stats_builder(x, "referências foram marcadas com o critério")
trial_id_ <- toupper(type)
trial_data <- reference %>% dplyr::filter(trial_id == trial_id_)
cli::h1("Estatísticas do Trial {.strong trial_id_}")
cli::cli_h1("Estatísticas do Trial {.strong trial_id_}")
cli::cli_h1("Estatísticas do Trial {.strong {trial_id_}}")
cli::cat_line()
paste0(stats_builder(trial_data), collapse = "\n"
)
subset?
?subset
devtools::load_all(".")
devtools::load_all(".")
reference_stats("nr1", "pharmacology")
devtools::load_all(".")
reference_stats("nr1", "pharmacology")
devtools::load_all(".")
devtools::load_all(".")
reference_stats("nr1", "pharmacology")
cli::cli_inform("{cli::col_silver('[Copied to clipboard]')}")
devtools::load_all(".")
printer("test")
devtools::load_all(".")
printer("test")
cli::cli_inform({.strong {cli::col_red('test')}})
cli::cli_alert("test")
cli::cli_inform({.strong {cli::col_red('test')}})
cli::cli_inform("{.strong {cli::col_red('test')}}")
cli::col_red("test")
test <- cli::col_red("test")
class(test)
cli::cli_inform(test)
attributes(test)
unclass(test)
append(test, cli::col_black("test2"))
test_2 <- append(test, cli::col_black("test2"))
test_2
cli::cli_inform(test_2)
cli::col_red("{.strong "test"})
cli::col_red("{.strong 'test'}")
devtools::load_all(".")
printer("test")
devtools::load_all(".")
printer("test")
printer("test", "test2")
devtools::load_all(".")
printer("test", "test2")
devtools::load_all(".")
clipboard("test")
clipboard(test_2)
devtools::load_all(".")
printer("test", "test2")
devtools::load_all(".")
printer("test", "test2")
devtools::load_all(".")
printer("test", "test2")
query("Lorem", "Ipsum, dolor", "sit", provider = "PubMed",
constraint = c("title", "abstract"), clipboard = FALSE)
query("Lorem", "AND", "Ipsum", "NOT", "dolor", provider = "EMBASE",
constraint = c("title", "abstract"), clipboard = FALSE)
query("Lorem", "AND", "Ipsum", "NOT", "dolor", provider = "EMBASE",
constraint = c("title", "abstract"), clipboard = TRUE)
devtools::load_all(".")
reference_stats("nr1")
reference_stats("nr1", pakcage = "pharmacology")
reference_stats("nr1", package = "pharmacology")
devtools::load_all(".")
reference_stats("nr1", package = "pharmacology")
cli::col_silver('[Copied to clipboard]')
cat(cli::col_silver('[Copied to clipboard]'))
devtools::load_all(".")
devtools::load_all(".")
clipboard("test")
clipboard("test", space_above = TRUE)
clipboard("test", space_above = TRUE, quiet = TRUE)
reference_stats("nr1", package = "pharmacology")
devtools::load_all(".")
reference_stats("nr1", package = "pharmacology")
devtools::load_all(".")
test <- reference_stats("nr1", package = "pharmacology")
devtools::load_all(".")
test <- reference_stats("nr1", package = "pharmacology")
test
devtools::load_all(".")
test <- reference_stats("nr1", package = "pharmacology")
test
devtools::load_all(".")
reference_stats("nr1", package = "pharmacology")
devtools::load_all(".")
reference_stats("nr1", package = "pharmacology")
reference_stats("dup", package = "pharmacology")
devtools::load_all(".")
reference_stats("dup", package = "pharmacology")
selection_stats("dup", package = "pharmacology")
devtools::load_all(".")
selection_stats("dup", package = "pharmacology")
devtools::load_all(".")
selection_stats("dup", package = "pharmacology")
selection_stats("nr1", package = "pharmacology")
language <- "pt"
type <- 3
cli::cli_abort(paste0(
"Currently there's no {.strong {cli::col_red(type)}} ",
"message for the {.strong {cli::col_blue(language)}} ",
"language."
))
cli::cli_abort(paste0(
"Currently there's no type {.strong {cli::col_red(type)}} ",
"message for the {.strong {cli::col_blue(language)}} ",
"language."
))
cli::cli_abort(paste0(
"Currently there's no type {cli::col_red(type)} ",
"message for the {cli::col_blue(language)} ",
"language."
))
pt <- c(
1 = "referências foram marcadas com o critério"
2 = "test"
)
pt <- c(
1 = "referências foram marcadas com o critério",
2 = "test"
)
pt <- c(
1 = "referências foram marcadas com o critério",
2 = "test"
)
pt <- c(
"1" = "referências foram marcadas com o critério",
"2" = "test"
)
pt[1]
get(language)[type]
get(language)[1]
args(checkmate::assert_string)
?assing
?assign
x <- reference$criteria_id
stats_language("pt", 1)
devtools::load_all(".")
stats_language("pt", 1)
stats_language("pt", 2)
stats_language("pt", 3)
stats_language("pt", 4)
devtools::load_all(".")
stats_language("pt", 4)
na_total <- length(which(is.na(x)))
na_percentage <- ((na_total / n_total) * 100)
n_total <- length(x)
na_percentage <- ((na_total / n_total) * 100)
not_na_total <- n_total - na_total
na_percentage <- ((not_na_total / n_total) * 100)
na_total <- length(which(is.na(x)))
na_percentage <- ((na_total / n_total) * 100)
not_na_total <- n_total - na_total
not_na_percentage <- ((not_na_total / n_total) * 100)
for (i in c("na_total", "not_na_total", "n_total")) {
assign(paste0(i, "_pretty"),
format(get(i), big.mark = big_mark,
decimal.mark = decimal_mark))
}
decimal_mark = ","
big_mark = "."
for (i in c("na_total", "not_na_total", "n_total")) {
assign(paste0(i, "_pretty"),
format(get(i), big.mark = big_mark,
decimal.mark = decimal_mark))
}
devtools::load_all(".")
selection_stats("nr1", package = "pharmacology")
utils::data("sheets", package = package, envir = environment())
utils::data("sheets", package = package, envir = environment())
utils::data("sheets", package = package, envir = environment())
package = "pharmacology"
utils::data("sheets", package = package, envir = environment())
type <- "nr1"
trial_data <- paste0("trial_", tolower(type)) %>%
read_sheet(package = package)
trial_data <- trial_data$criteria_id
language = "pt"
clipboard = TRUE
cli::cli_h1("Estatísticas do Trial {.strong {toupper(type)}}")
cli::cat_line()
out <- paste0("## Estatísticas do Trial ", backtick_(toupper(type)),
"\n\n",
paste0(stats_builder(trial_data, language),
collapse = "\n"))
devtools::load_all(".")
cli::cli_h1("Estatísticas do Trial {.strong {toupper(type)}}")
cli::cat_line()
out <- paste0("## Estatísticas do Trial ", backtick_(toupper(type)),
"\n\n",
paste0(stats_builder(trial_data, language),
collapse = "\n"))
cli::cli_h1("Estatísticas do Trial {.strong {toupper(type)}}")
cli::cat_line()
out <- paste0("## Estatísticas do Trial ", backtick_(toupper(type)),
"\n\n",
paste0(stats_builder(trial_data, language,
closure = "trial"),
collapse = "\n"))
x <- trial_data
test <- list(list("na_total", "na_percentage", 2),
list("not_na_total", "not_na_percentage", 3))
test[1]
test[[1]]
i <- test[[1]]
i[[1]]
i[[2]]
i[[3]]
i_md <- paste0(
double_underline_(pretty_num(i[[1]])), " / ",
pretty_num(n_total), " ",
"(__", pretty_per(i[[2]]), "%__)", " ",
stats_message(language, i[[3]]))
double_underline_(pretty_num(i[[1]]))
pretty_num(n_total)
double_underline_(pretty_num(get(i[[1]])))
n_total <- length(x)
na_total <- length(which(is.na(x)))
na_percentage <- ((na_total / n_total) * 100)
not_na_total <- n_total - na_total
not_na_percentage <- ((not_na_total / n_total) * 100)
double_underline_(pretty_num(get(i[[1]])))
pretty_num(n_total)
i_md <- paste0(
double_underline_(pretty_num(get(i[[1]]))), " / ",
pretty_num(n_total), " ",
"(__", pretty_per(get(i[[2]])), "%__)", " ",
stats_message(language, i[[3]]))
i_md
test <- list(list("not_na_total", "not_na_percentage", 2),
list("na_total", "na_percentage", 3))
test <- test[[1]]
paste0(
double_underline_(pretty_num(get(i[[1]]))), " / ",
pretty_num(n_total), " ",
"(__", pretty_per(get(i[[2]])), "%__)", " ",
stats_message(language, i[[3]]))
test
i <- test
paste0(
double_underline_(pretty_num(get(i[[1]]))), " / ",
pretty_num(n_total), " ",
"(__", pretty_per(get(i[[2]])), "%__)", " ",
stats_message(language, i[[3]]))
cli::cli_alert_info(paste0(
"{.strong {cli::col_red(pretty_num(i[[1]]))}}", " / ",
"{.strong {pretty_num(n_total)}}", " (",
"{.strong {cli::col_red(paste0(pretty_per(i[[2]])),
'%')}}",
") ", stats_message(language, i[[3]]), "."))
cli::cli_alert_info(paste0(
"{.strong {cli::col_red(pretty_num(get(i[[1]])))}}", " / ",
"{.strong {pretty_num(n_total)}}", " (",
"{.strong {cli::col_red(paste0(pretty_per(get(i[[2]]))),
'%')}}",
") ", stats_message(language, i[[3]]), "."))
paste0("## Estatísticas do Trial ", backtick_(toupper(type)),
"\n\n",
paste0(stats_builder(trial_data, language,
closure = "trial"),
collapse = "\n"))
devtools::load_all(".")
paste0("## Estatísticas do Trial ", backtick_(toupper(type)),
"\n\n",
paste0(stats_builder(trial_data, language,
closure = "trial"),
collapse = "\n"))
devtools::load_all(".")
reference_stats("nr1", "pharmacology")
selection_stats("nr1", "pharmacology")
devtools::load_all(".")
selection_stats("nr1", "pharmacology")
devtools::load_all(".")
selection_stats("nr1", "sport")
selection_stats("nr1", "sport")
paste0(
"* ",
double_underline_(pretty_num(nrow(reference))), " ",
stats_message(language, 4),
".")
devtools::load_all(".")
paste0(
"* ",
double_underline_(pretty_num(nrow(reference))), " ",
stats_message(language, 4),
".")
devtools::load_all(".")
devtools::load_all(".")
reference_stats("nr1", "pharmacology")
selection_stats("nr1", package = "pharmacology")
selection_stats("full", package = "pharmacology")
devtools::load_all(".")
selection_stats("full", package = "pharmacology")
devtools::load_all(".")
selection_stats("full", package = "pharmacology")
devtools::load_all(".")
selection_stats("full", package = "pharmacology")
View(criteria)
criteria$criteria_id
unique <- c("NR1", "DUP")
unique[order(match(unique, criteria$criteria_id))]
devtools::load_all(".")
selection_stats("nr1", package = "pharmacology")
devtools::load_all(".")
selection_stats("nr1", package = "pharmacology")
devtools::load_all(".")
selection_stats("nr1", package = "pharmacology")
selection_stats(package = "pharmacology")
devtools::load_all(".")
selection_stats(package = "pharmacology")
devtools::load_all(".")
selection_stats(package = "pharmacology")
selection_stats("nr1", package = "pharmacology")
devtools::load_all(".")
selection_stats("dup", package = "pharmacology")
devtools::load_all(".")
selection_stats("dup", package = "pharmacology")
?format
devtools::load_all(".")
selection_stats("dup", package = "pharmacology")
selection_stats(package = "pharmacology")
selection_stats("dup", package = "mcycle")
devtools::load_all(".")
selection_stats("dup", package = "mcycle")
selection_stats(package = "mcycle")
selection_stats(package = "mcycle")
selection_stats("nr1", package = "mcycle")
selection_stats(package = "sport")
devtools::load_all(".")
selection_stats(package = "sport")
knitr::kable(criteria)
clipboard(knitr::kable(criteria))
install.packages("emojifont")
install.packages("crayon")
data <- mcycle::reference
x <- data$criteria_id
frequency(x)
summary(x)
table(x)
test <- table(x)
test
test[1]
?table
table(x, useNA = "always")
install.packages("questionr")
install.packages("questionr")
questionr::freq(x, cum = TRUE, sort = "dec", total = TRUE)
test <- questionr::freq(x, cum = TRUE, sort = "dec", total = TRUE)
View(test)
knit::kable(test)
knitr::kable(test)
clipboard(knitr::kable(test))
