debugonce(synthesisr::detect_delimiter)
file <- "C:\\Users\\Daniel\\Desktop\\PsycNET_Export.ris"
test <- synthesisr::read_ref(file, "none")
debugonce(synthesisr::prep_ris)
debugonce(synthesisr:::prep_ris)
file <- "C:\\Users\\Daniel\\Desktop\\PsycNET_Export.ris"
test <- synthesisr::read_ref(file, "none")
View(z_dframe)
end_rows <- 22
View(test)
debugonce(synthesisr:::prep_ris)
file <- "C:\\Users\\Daniel\\Desktop\\PsycNET_Export.ris"
test <- synthesisr::read_ref(file, "none")
View(z_dframe)
file <- "C:\\Users\\Daniel\\Desktop\\PsycNET_Export.ris"
test <- synthesisr::read_ref(file, "wos")
file <- "C:\\Users\\Daniel\\Desktop\\PsycNET_Export.ris"
test <- synthesisr::read_ref(file, "ovid")
file <- "C:\\Users\\Daniel\\Desktop\\PsycNET_Export.ris"
test <- synthesisr::read_ref(file)
db <- "scielo_es"
path <- "./inst/extdata/citation/"
choices <- c("wos", "scopus", "ovid", "asp", "synthesir")
tag_namming <- if (db %in% choices) db else "best_guess"
files <- paste0(path, get(paste0(db, "_files")))
assign(db, synthesisr::read_refs(files, tag_namming))
assign(db, clear_row_names(get(db)))
View(scielo_es)
db <- "scielo_pt"
path <- "./inst/extdata/citation/"
choices <- c("wos", "scopus", "ovid", "asp", "synthesir")
tag_namming <- if (db %in% choices) db else "best_guess"
files <- paste0(path, get(paste0(db, "_files")))
assign(db, synthesisr::read_refs(files, tag_namming))
assign(db, clear_row_names(get(db)))
db <- "scopus"
path <- "./inst/extdata/citation/"
choices <- c("wos", "scopus", "ovid", "asp", "synthesir")
tag_namming <- if (db %in% choices) db else "best_guess"
files <- paste0(path, get(paste0(db, "_files")))
assign(db, synthesisr::read_refs(files, tag_namming))
assign(db, clear_row_names(get(db)))
db <- "wos"
path <- "./inst/extdata/citation/"
choices <- c("wos", "scopus", "ovid", "asp", "synthesir")
tag_namming <- if (db %in% choices) db else "best_guess"
files <- paste0(path, get(paste0(db, "_files")))
assign(db, synthesisr::read_refs(files, tag_namming))
assign(db, clear_row_names(get(db)))
file <- "C:\\Users\\Daniel\\Desktop\\PsycNET_Export.ris"
test <- synthesisr::read_ref(file)
seq(1, -2)
?seq_len
seq_len(x)
x
seq_len(5)
seq_len(-1)
seq_len(0)
names(wos)
names(scopus)
file <- "C:\\Users\\Daniel\\Desktop\\PsycNET_Export.ris"
test <- synthesisr::read_ref(file)
file <- "C:\\Users\\Daniel\\Desktop\\PsycNET_Export.ris"
test <- synthesisr::read_ref(file)
raw_data()
raw_data("search_history")
raw_data("citation")
names(search)
devtools::load_all(".")
write_query()
devtools::load_all(".")
write_query()
devtools::load_all(".")
write_query()
devtools::load_all(".")
tidy_keyword("Lorem", "Ipsum*", clean_modifiers = TRUE, na_rm = FALSE)
tidy_keyword("Lorem", "Ipsum, dolor", delimiter = ",")
tidy_keyword("Lorem", "Ipsum dolor", c("sit", "amet"))
tidy_keyword("Lorem", "Ipsum dolor", c("sit", "amet"), sort = TRUE)
devtools::load_all(".")
tidy_keyword("Lorem", "Ipsum dolor", c("sit", "amet"), sort = TRUE)
devtools::load_all(".")
tidy_keyword("Lorem", "Ipsum dolor", c("sit", "amet"), sort = TRUE)
write_query()
write_query()
write_query()
write_query()
!is_namespace_loaded("utils")
!is_namespace_loaded("magrittr")
!is_namespace_loaded("googlesheets4")
devtools::load_all(".")
write_query()
devtools::load_all(".")
tibble::as_tible(tags$apa)
tibble::as_tibble(tags$apa)
tags$apa
as.data.frame(tags$apa)
unlist(tag$apa)
unlist(tags$apa)
clear_names(unlist(tags$apa))
dplyr::tibble(description = names(tag$apa),
tag = clear_names(unlist(tags$apa)))
dplyr::tibble(description = names(tags$apa),
tag = clear_names(unlist(tags$apa)))
apa <- list(
"Any Field" = "Any Field",
"Abstract" = "Abstract",
"Abstracts" = "Abstract", # Alias
"Administration Time" = "Administration Time",
"Affiliation" = "Affiliation",
"Author" = "Author",
"Author of Reviewed Item" = "Author of Reviewed Item",
"Book Title" = "Book Title",
"Conference" = "Conference",
"Content owner" = "Content owner",
"Correction date" = "Correction date",
"Correspondence" = "Correspondence",
"DOI number" = "DOI Number",
"First Page" = "First Page",
"Geographic Location" = "Geographic Location",
"Grant/Sponsorship" = "Grant/Sponsorship",
"Index Terms" = "Index Terms",
"ISBN" = "ISBN",
"ISSN" = "ISSN",
"Journal Title" = "Journal Title",
"Keywords" = "Keywords",
"Keyword" = "Keywords", # Alias
"Language" = "Language",
"MeSH" = "MeSH",
"Population" = "Population",
"Publication Date" = "Publication Date",
"Publisher" = "Publisher",
"PubMed ID (PMID)" = "PubMed ID (PMID)",
"Purpose" = "Purpose",
"Release Date" = "Release Date",
"Setting" = "Setting",
"Source Document Citation" = "Source Document Citation",
"Test Name" = "Test Name",
"Test Construct" = "Test Construct",
"Tests & Measures" = "Tests & Measures",
"Therapist Name" = "Therapist Name",
"Title" = "Title",
"Titles" = "Title", # Alias
"Title of Reviewed Item" = "Title of Reviewed Item",
"Unique Identifier" = "Unique Identifier",
"Year of Reviewed Item" = "Year of Reviewed Item",
"Series Title" = "SE",
"Special Interest" = "SC",
"Start Page" = "SP",
"Subject" = "SU",
"Supplement Title" = "IR",
"Table of Contents" = "TC",
"Title" = "TI",
"Volume" = "VI",
"Word in Major Subject Heading" = "MJ",
"Word in Subject Heading" = "MW",
"Year of Publication" = "PY"
)
dplyr::tibble(description = names(tags$apa),
tag = clear_names(unlist(tags$apa)))
export <- dplyr::tibble(description = names(apa),
tag = clear_names(unlist(apa)))
export
args(googlesheets4::range_write)
googlesheets4::range_write(
"1ljlhZ5r5DozohySGFiGUPI1MDQehjnSR3tlXTqmdt48",
export,
sheet = "APA",
range = "A1",
col_names = TRUE,
reformat = FALSE
)
length(tags$apa)
source('C:/Midia/GitHub/sqlr/data-raw/tags.R')
source('C:/Midia/GitHub/sqlr/data-raw/tags.R')
source('C:/Midia/GitHub/sqlr/data-raw/tags.R')
tags$apa
tags <- tags()
export(tags$apa, "APA")
source('C:/Midia/GitHub/sqlr/data-raw/tags.R')
export(tags$apa, "APA")
transform_list(tags$apa)
tags$apa
tags <- tags()
transform_list(tags$apa)
export(tags$apa, "APA")
source('C:/Midia/GitHub/sqlr/data-raw/tags.R')
tags <- tags()
export(tags$apa, "APA")
namse(tags)
names(tags)
tags <- tags()
export(tags$apa, "APA")
export(tags$ebsco, "EBSCO")
export(tags$embase, "EMBASE")
export(tags$lilacs, "LILACS")
export(tags$pubmed, "PubMed")
export(tags$scielo, "SciELO")
export(tags$scopus, "Scopus")
export(tags$wos, "Web of Science")
View(synthesisr::code_lookup)
?strftime
args(googlesheets4::read_shee)
args(googlesheets4::read_sheet)
?googlesheets4::read_sheet
id <- "1x6Aj8cXl9qFtpXq48Q6zdmT-w9EEqNG1iVQcKVRhgKM"
sheet <- "Dataset"
write <- FALSE
data <- googlesheets4::read_sheet(id, sheet, col_types = c("c", "c", "c"))
data <- googlesheets4::read_sheet(id, sheet, col_types = "c")
View(data)
data
data <- googlesheets4::read_sheet(id, sheet, col_types = "c")
data
data <- googlesheets4::read_sheet(id, sheet, col_types = "c")
data <- data %>% dplyr::filter(!(name == "operators"))
data
as.list(data)
args(dplyr::across)
data <- googlesheets4::read_sheet(id, sheet, col_types = "c")
data <- data %>%
dplyr::filter(!(name == "operators")) %>%
dplyr::mutate(across(is.character, stringr::str_squish))
data <- googlesheets4::read_sheet(id, sheet, col_types = "c")
data <- data %>%
dplyr::filter(!(name == "operators")) %>%
dplyr::mutate(across(where(is.character), stringr::str_squish))
data
data <- googlesheets4::read_sheet(id, sheet, col_types = "c")
data <- data %>%
dplyr::filter(!(name == "operators")) %>%
dplyr::mutate(across(where(is.character), stringr::str_squish))
data
as.list(data)
sheets
x <- list()
x["name"] <- 1
x
names(sheets)
names(data)
out <- list()
for (i in seq_len(nrow(data))) {
out[data$name[i]] <- list(name = data$name[i],
type = data$type[i],
id = data$id[i],
sheet = data$sheet[i])
}
i <- 1
out <- list()
data$name[i]
out[data$name[i]] <- list(name = data$name[i],
type = data$type[i],
id = data$id[i],
sheet = data$sheet[i])
out
out <- list()
out[[data$name[i]]] <- list(name = data$name[i],
type = data$type[i],
id = data$id[i],
sheet = data$sheet[i])
out
out <- list()
for (i in seq_len(nrow(data))) {
out[[data$name[i]]] <- list(name = data$name[i],
type = data$type[i],
id = data$id[i],
sheet = data$sheet[i])
}
sheets <- list()
for (i in seq_len(nrow(data))) {
out[[data$name[i]]] <- list(name = data$name[i],
type = data$type[i],
id = data$id[i],
sheet = data$sheet[i])
}
sheets <- list()
for (i in seq_len(nrow(data))) {
sheets[[data$name[i]]] <- list(name = data$name[i],
type = data$type[i],
id = data$id[i],
sheet = data$sheet[i])
}
sheets$provider_tags$id
sheets$provider_tags$type
sqlr::sheets$domain$id
sheets$domain$id
sheets <- function(id, sheet = "Dataset", write = FALSE) {
checkmate::assert_string(id)
checkmate::assert_string(sheet)
checkmate::assert_flag(write)
data <- googlesheets4::read_sheet(id, sheet, col_types = "c")
data <- data %>%
dplyr::filter(!(name == "operators")) %>%
dplyr::mutate(across(where(is.character), stringr::str_squish))
sheets <- list()
for (i in seq_len(nrow(data))) {
sheets[[data$name[i]]] <- list(name = data$name[i],
type = data$type[i],
id = data$id[i],
sheet = data$sheet[i])
}
if (isTRUE(write)) {
if(!(dir.exists("./data/"))) dir.create("./data/")
usethis::use_data(sheets, overwrite = TRUE)
}
invisible(sheets)
}
sheets(id, write = TRUE)
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
sheets
sheet_id("domain")
devtools::load_all(".")
sheet_id("domain")
class(sheet_id("domain"))
sheet_id()
keyword_set(1, "english")
names(sheets)
sheets$doam
sheets$domain
test <- read_sheet()
devtools::load_all(".")
test <- read_sheet()
?purr::discard
?purrr::discard
purrr::discard(sheets, sheets$type == "Tag")
list(a = "a", b = NULL, c = integer(0), d = NA, e = list()) %>%
compact()
library(purrr)
dplyr::filter(!(type == "Tags"))
list(a = "a", b = NULL, c = integer(0), d = NA, e = list()) %>%
compact()
sheets
sheets[-"domain"]
sheets[-domain]
sheets[[-domain]]
sheets[domain]
sheets["domain"]
sheets[-"domain"]
sheets[!"domain"]
sheets["domain"] <- NULL
sheets
names(sheets)
devtools::load_all(".")
test <- read_sheet()
for (i in sheets) {
if (i$type == "Tags") {
sheets <- sheets[i$name] <- NULL
}
}
i
i$type == "Tags"
i <- sqlr::sheets$provider_tags
i$type == "Tags"
i$name
sheets <- sqlr::sheets
bkp <- sheets
sheets[i$name] <- NULL
sheets
devtools::load_all(".")
test <- read_sheet()
devtools::load_all(".")
write_metadata()
write_metadata("1x6Aj8cXl9qFtpXq48Q6zdmT-w9EEqNG1iVQcKVRhgKM")
test <- write_metadata("1x6Aj8cXl9qFtpXq48Q6zdmT-w9EEqNG1iVQcKVRhgKM")
test
devtools::load_all(".")
write_metadata()
write_metadata("1x6Aj8cXl9qFtpXq48Q6zdmT-w9EEqNG1iVQcKVRhgKM")
write_metadata("1x6Aj8cXl9qFtpXq48Q6zdmT-w9EEqNG1iVQcKVRhgKM")
devtools::load_all(".")
write_metadata("1x6Aj8cXl9qFtpXq48Q6zdmT-w9EEqNG1iVQcKVRhgKM")
id <- "1ljlhZ5r5DozohySGFiGUPI1MDQehjnSR3tlXTqmdt48"
id <- "1ljlhZ5r5DozohySGFiGUPI1MDQehjnSR3tlXTqmdt48"
data <- googlesheets4::read_sheet(id, "APA", col_types = "c")
data
as.list(data)
devtools::load_all(".")
sheet_id()
devtools::load_all(".")
sheet_id()
devtools::load_all(".")
sheet_id()
devtools::load_all(".")
sheet_id()
write_metadata()
write_metadata("1x6Aj8cXl9qFtpXq48Q6zdmT-w9EEqNG1iVQcKVRhgKM")
devtools::load_all(".")
write_metadata("1x6Aj8cXl9qFtpXq48Q6zdmT-w9EEqNG1iVQcKVRhgKM")
devtools::load_all(".")
write_metadata("1x6Aj8cXl9qFtpXq48Q6zdmT-w9EEqNG1iVQcKVRhgKM")
devtools::load_all(".")
write_metadata("1x6Aj8cXl9qFtpXq48Q6zdmT-w9EEqNG1iVQcKVRhgKM")
source('C:/Midia/GitHub/sqlr/data-raw/provider_tags.R')
provider_tags()
test <- provider_tags()
test
devtools::load_all(".")
test <- provider_tags()
source('C:/Midia/GitHub/sqlr/data-raw/provider_tags.R')
test <- provider_tags()
source('C:/Midia/GitHub/sqlr/data-raw/provider_tags.R')
test <- provider_tags()
test
devtools::load_all(".")
test <- provider_tags()
View(test)
source('C:/Midia/GitHub/sqlr/data-raw/provider_tags.R')
test <- provider_tags()
View(test)
test 2 <- sqlr::provider_tags
test_2 <- sqlr::provider_tags
test_2 <- sqlr::tags
View(test_2)
test$apa[["Any Field"]]
test$apa["Any Field"]
test$apa
grep("^Abstract$", test$apa)
test$apa[grep("^Abstract$", test$apa)]
source('C:/Midia/GitHub/sqlr/data-raw/provider_tags.R')
test <- provider_tags()
View(test)
test$apa
provider_tags(TRUE)
args(checkmate::assert_data_frame)
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
source('C:/Midia/GitHub/sqlr/R/query.R')
devtools::load_all(".")
query("Lorem", "AND", "Ipsum", "NOT", "dolor", provider = "EMBASE",
constraint = c("title", "abstract"), clipboard = FALSE)
devtools::load_all(".")
query("Lorem", "AND", "Ipsum", "NOT", "dolor", provider = "EMBASE",
constraint = c("title", "abstract"), clipboard = FALSE)
devtools::load_all(".")
query("Lorem", "AND", "Ipsum", "NOT", "dolor", provider = "EMBASE",
constraint = c("title", "abstract"), clipboard = FALSE)
debugonce(get_tag)
query("Lorem", "AND", "Ipsum", "NOT", "dolor", provider = "EMBASE",
constraint = c("title", "abstract"), clipboard = FALSE)
constraint
data
grep(pattern, tolower(data$name)
)
index <- grep(pattern, tolower(data$name))
index <- grep(pattern, tolower(data$name))
data$tag[index]
devtools::load_all(".")
query("Lorem", "AND", "Ipsum", "NOT", "dolor", provider = "EMBASE",
constraint = c("title", "abstract"), clipboard = FALSE)
query("Lorem", "Ipsum, dolor", "sit", provider = "PubMed",
constraint = c("title", "abstract"), clipboard = FALSE)
query(keyword_set(1, "english"), "AND", keyword_set(2, "english"),
provider = "wos", constraint = c("title", "abstract", "keyword"))
View(provider_tags)
sheets
sheet_id()
write_metadata("1x6Aj8cXl9qFtpXq48Q6zdmT-w9EEqNG1iVQcKVRhgKM")
devtools::load_all(".")
sheets
sheets
source('C:/Midia/GitHub/sqlr/data-raw/provider_tags.R')
provider_tags(TRUE)
devtools::load_all(".")
View(provider_tags)
query("Lorem", "Ipsum, dolor", "sit", provider = "PubMed",
constraint = c("title", "abstract"), clipboard = FALSE)
query("Lorem", "AND", "Ipsum", "NOT", "dolor", provider = "EMBASE",
constraint = c("title", "abstract"), clipboard = FALSE)
query(keyword_set(1, "english"), "AND", keyword_set(2, "english"),
provider = "wos", constraint = c("title", "abstract", "keyword"))
write_metadata("1x6Aj8cXl9qFtpXq48Q6zdmT-w9EEqNG1iVQcKVRhgKM")
write_sheet()
sheet_id()
sheet_id("domain")
sheet_id()
sheet_id("sheets")
args(googlesheets4::read_sheet)
devtools::load_all(".")
test <- read_sheet()
test <- googlesheets4::read_sheet(sheets$domain$id, sheets$domain$sheet)
test <- googlesheets4::read_sheet(sheets$source$id, sheets$source$sheet)
View(test)
names(sheets)
devtools::load_all(".")
test <- read_sheet()
sheets$search
test <- googlesheets4::read_sheet(sheets$search$id, sheets$search$sheet)
test <- googlesheets4::read_sheet("1yZCRt3G94JS73T55rGCxdgUHrKsM6QX6RHSeRUxe3J4", "Dataset")
test <- googlesheets4::read_sheet("1yZCRt3G94JS73T55rGCxdgUHrKsM6QX6RHSeRUxe3J4", "Codebook")
test <- googlesheets4::read_sheet("19reWKICb7DyYf5fk7Qzbmdhcy58R7bqMAqijZHo7esA", "Codebook")
test <- googlesheets4::read_sheet("19reWKICb7DyYf5fk7Qzbmdhcy58R7bqMAqijZHo7esA", "Codebook")
write_metadata()
write_metadata("1x6Aj8cXl9qFtpXq48Q6zdmT-w9EEqNG1iVQcKVRhgKM")
test <- googlesheets4::read_sheet("19reWKICb7DyYf5fk7Qzbmdhcy58R7bqMAqijZHo7esA", "Codebook")
test <- googlesheets4::read_sheet("19reWKICb7DyYf5fk7Qzbmdhcy58R7bqMAqijZHo7esA", "Codebook")
test <- googlesheets4::read_sheet("19reWKICb7DyYf5fk7Qzbmdhcy58R7bqMAqijZHo7esA", "Codebook")
debugonce(cellranger::cell_limit)
test <- googlesheets4::read_sheet("19reWKICb7DyYf5fk7Qzbmdhcy58R7bqMAqijZHo7esA", "Codebook")
sheets
write_metadata()
write_metadata("1x6Aj8cXl9qFtpXq48Q6zdmT-w9EEqNG1iVQcKVRhgKM")
devtools::load_all(".")
sheets
test <- googlesheets4::read_sheet("19reWKICb7DyYf5fk7Qzbmdhcy58R7bqMAqijZHo7esA", "Codebook")
test <- googlesheets4::read_sheet("19reWKICb7DyYf5fk7Qzbmdhcy58R7bqMAqijZHo7esA", "Codebook")
test <- googlesheets4::read_sheet("1ArsjY34VmqTC90RU6_P0vU67k7x4pkai8mlLqhZdJOA", "Test")
test <- googlesheets4::read_sheet("1ArsjY34VmqTC90RU6_P0vU67k7x4pkai8mlLqhZdJOA", "Documentation")
